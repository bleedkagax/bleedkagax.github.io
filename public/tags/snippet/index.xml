<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snippet on Kaga Blog</title>
    <link>http://localhost:62354/tags/snippet/</link>
    <description>Recent content in Snippet on Kaga Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:62354/tags/snippet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deep Dive Into Design Patterns</title>
      <link>http://localhost:62354/post/1_deep_dive_into_design_patterns/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_deep_dive_into_design_patterns/</guid>
      <description>&lt;h1 id=&#34;一面向对象-程序设计-简介&#34;&gt;&lt;strong&gt;一、面向对象 程序设计 简介&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;对象之间的关系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_deep_dive_into_design_patterns.png&#34; alt=&#34;img/1_deep_dive_into_design_patterns.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;依赖&lt;/strong&gt;:对类 B 进行修改会影响到类 A 。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;关联&lt;/strong&gt;:对象 A 知道对象 B。类 A 依赖于类 B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;聚合&lt;/strong&gt;:对象A知道对象B且由B构成。类A依赖于类B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;组合&lt;/strong&gt;:对象 A 知道对象 B、由 B 构成而且管理着 B 的生命周 期。类 A&#xA;依赖于类 B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;实现&lt;/strong&gt;: 类 A 定义的方法由接口 B 声明。 对象 A 可被视为对象 B。类 A&#xA;依赖于类 B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;继承&lt;/strong&gt;: 类 A 继承类 B 的接口和实现， 但是可以对其进行扩 展。对象 A&#xA;可被视为对象 B。类 A 依赖于类 B。&lt;/p&gt;&#xA;&lt;h1 id=&#34;二设计模式简介&#34;&gt;&lt;strong&gt;二、设计模式简介&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;设计模式是针对软件设计中常见问题的工具箱， 其中的工具&#xA;就是各种&lt;strong&gt;经过实践验证的解决方案。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Refactor</title>
      <link>http://localhost:62354/post/0_refactor/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_refactor/</guid>
      <description>&lt;p&gt;Essentially, &lt;strong&gt;refactoring is improving the design of code after it&amp;rsquo;s been written&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;If you want to add a feature to a program, but find that the code isn&amp;rsquo;t easy to change due to a lack of good structure, refactor that program first so that it&amp;rsquo;s easier to add the feature, and then add the feature.&lt;/p&gt;&#xA;&lt;p&gt;It is the change in &lt;strong&gt;requirements&lt;/strong&gt; that makes refactoring necessary.&lt;/p&gt;&#xA;&lt;p&gt;The refactoring technique is to &lt;strong&gt;modify the program at a tiny pace&lt;/strong&gt;. If you make a mistake, it&amp;rsquo;s easy to spot it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
