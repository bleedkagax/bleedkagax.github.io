<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Kaga Blog</title>
    <link>http://localhost:62354/post/</link>
    <description>Recent content in Posts on Kaga Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:62354/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker</title>
      <link>http://localhost:62354/post/4_docker/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/4_docker/</guid>
      <description>&lt;h1 id=&#34;docker-guidelines&#34;&gt;Docker Guidelines&lt;/h1&gt;&#xA;&lt;h2 id=&#34;dockerfile-best-practices&#34;&gt;Dockerfile Best Practices&lt;/h2&gt;&#xA;&lt;h3 id=&#34;use-official-base-images&#34;&gt;Use Official Base Images&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why&lt;/strong&gt;: Official images are maintained and frequently updated, ensuring reliability and security.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;How&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; node:14-alpine&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;minimize-image-size&#34;&gt;Minimize Image Size&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why&lt;/strong&gt;: Smaller images lead to faster deployments and reduced storage costs.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;How&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use minimal base images (e.g., Alpine Linux).&lt;/li&gt;&#xA;&lt;li&gt;Remove unnecessary packages and files.&lt;/li&gt;&#xA;&lt;li&gt;Combine commands to reduce layers.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-get install -y package1 package2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf /var/lib/apt/lists/*&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Kubernetes</title>
      <link>http://localhost:62354/post/5_k8s/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/5_k8s/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Kubernetes (k8s) is an open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications.&lt;/p&gt;&#xA;&lt;h2 id=&#34;kubernetes-architecture&#34;&gt;Kubernetes Architecture&lt;/h2&gt;&#xA;&lt;h3 id=&#34;masters&#34;&gt;Masters&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;strong&gt;master node&lt;/strong&gt; manages the Kubernetes cluster. It coordinates all activities, such as scheduling, scaling, and updating applications.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Components&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;API Server&lt;/strong&gt;: The front-end of the Kubernetes control plane.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;etcd&lt;/strong&gt;: A distributed key-value store for configuration data.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Controller Manager&lt;/strong&gt;: Manages controllers that handle routine tasks.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scheduler&lt;/strong&gt;: Assigns workloads to nodes based on resource availability and policies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;nodes&#34;&gt;Nodes&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Worker nodes&lt;/strong&gt; run the containerized applications. Each node contains the necessary services to run Pods and communicate with the master node.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lua</title>
      <link>http://localhost:62354/post/1_lua/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_lua/</guid>
      <description>&lt;h2 id=&#34;introduction-to-lua&#34;&gt;Introduction to Lua&lt;/h2&gt;&#xA;&lt;p&gt;Lua is a powerful, efficient, lightweight, embeddable scripting language. It is designed to be embedded in other applications, providing flexibility and extensibility. Lua is widely used in game development, embedded systems, web applications, and more due to its simple syntax, fast execution, and ease of integration.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-lua&#34;&gt;What is Lua?&lt;/h2&gt;&#xA;&lt;h3 id=&#34;key-features&#34;&gt;Key Features&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Lightweight and Fast:&lt;/strong&gt; Lua is designed to have a small footprint and execute rapidly, making it ideal for performance-critical applications.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Embeddable:&lt;/strong&gt; Easily integrates with C and other programming languages, allowing developers to extend its capabilities.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Simple Syntax:&lt;/strong&gt; Clean and straightforward syntax that is easy to learn and use.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Extensible:&lt;/strong&gt; Provides powerful metaprogramming capabilities through metatables and metamethods.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Powerful Data Structures:&lt;/strong&gt; Uses tables as the primary data structure, enabling the creation of arrays, dictionaries, and more.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;First-Class Functions:&lt;/strong&gt; Functions are first-class citizens, allowing for functional programming paradigms.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Coroutines:&lt;/strong&gt; Supports cooperative multitasking, enabling asynchronous programming.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;use-cases&#34;&gt;Use Cases&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Game Development:&lt;/strong&gt; Scripting game logic, AI, and event handling.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Embedded Systems:&lt;/strong&gt; Providing scripting capabilities within hardware devices.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Web Development:&lt;/strong&gt; Enhancing web servers with dynamic content generation (e.g., OpenResty).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Configuration:&lt;/strong&gt; Scriptable configuration files for applications and services.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Data Processing:&lt;/strong&gt; Handling data transformations and manipulations.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into Lua, ensure you have the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx</title>
      <link>http://localhost:62354/post/0_nginx/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_nginx/</guid>
      <description>&lt;h2 id=&#34;introduction-to-nginx&#34;&gt;Introduction to Nginx&lt;/h2&gt;&#xA;&lt;p&gt;Nginx (pronounced as &amp;ldquo;Engine-X&amp;rdquo;) is a high-performance, open-source web server, reverse proxy server, and email (IMAP/POP3) proxy server. It is renowned for its ability to handle high concurrency, low memory usage, and exceptional speed, making it a popular choice for serving both static and dynamic content on the web.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-nginx&#34;&gt;What is Nginx?&lt;/h2&gt;&#xA;&lt;h3 id=&#34;key-features&#34;&gt;Key Features&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;High Performance:&lt;/strong&gt; Ability to handle thousands of concurrent connections with minimal memory footprint.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reverse Proxying:&lt;/strong&gt; Acts as an intermediary for requests from clients seeking resources from servers.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Load Balancing:&lt;/strong&gt; Distributes incoming traffic across multiple servers to ensure reliability and uptime.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SSL/TLS Support:&lt;/strong&gt; Provides secure connections using SSL/TLS protocols.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Caching:&lt;/strong&gt; Reduces server load and improves response times by caching responses from backend servers.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Modular Architecture:&lt;/strong&gt; Supports dynamic modules to extend its functionality.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Static and Dynamic Content Serving:&lt;/strong&gt; Efficiently serves static files and dynamically generated content.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;use-cases&#34;&gt;Use Cases&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Web Servers:&lt;/strong&gt; Serving websites and web applications.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reverse Proxy:&lt;/strong&gt; Forwarding requests to application servers like Node.js, Python, Ruby, etc.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Load Balancer:&lt;/strong&gt; Distributing traffic across multiple backend servers.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;API Gateway:&lt;/strong&gt; Managing and routing API requests.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Content Caching:&lt;/strong&gt; Storing frequently accessed content to enhance performance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into Nginx, ensure you have the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Openresty</title>
      <link>http://localhost:62354/post/2_openresty/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/2_openresty/</guid>
      <description>&lt;h2 id=&#34;introduction-to-openresty&#34;&gt;Introduction to OpenResty&lt;/h2&gt;&#xA;&lt;p&gt;OpenResty is a dynamic web platform that integrates Nginx with the powerful Lua scripting language. It is designed to build scalable web applications, web services, and dynamic web gateways. By combining the high performance of Nginx with the flexibility of Lua, OpenResty enables developers to handle complex processing at the edge of the network.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-openresty&#34;&gt;What is OpenResty?&lt;/h2&gt;&#xA;&lt;p&gt;OpenResty extends Nginx by bundling it with a set of powerful Lua libraries and modules (known as LuaJIT). This allows embedding Lua scripts directly into the Nginx configuration, offering unparalleled flexibility for customizing request handling, routing, and response generation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go&#39;s Common Data Structures</title>
      <link>http://localhost:62354/post/1_go_data_structure/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_go_data_structure/</guid>
      <description>&lt;h2 id=&#34;1-strings&#34;&gt;1. Strings&lt;/h2&gt;&#xA;&lt;p&gt;Strings in Go are immutable sequences of bytes, typically used to represent UTF-8 encoded text.&lt;/p&gt;&#xA;&lt;h3 id=&#34;structure&#34;&gt;Structure&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stringStruct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unsafe&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Pointer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;len&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;memory-layout&#34;&gt;Memory Layout&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;stringStruct&#xA;+----------------+&#xA;| str (uintptr)  | ---&amp;gt; [byte array]&#xA;| len (int)      |&#xA;+----------------+&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Tree</title>
      <link>http://localhost:62354/post/1_tree/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_tree/</guid>
      <description>&lt;h2 id=&#34;binary-tree&#34;&gt;Binary Tree&lt;/h2&gt;&#xA;&lt;p&gt;A binary tree is a tree data structure in which each node has at most two children, referred to as the left child and the right child.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_tree.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;b-tree&#34;&gt;B-Tree&lt;/h2&gt;&#xA;&lt;p&gt;A B-tree is a self-balancing tree data structure that maintains sorted data and allows searches, sequential access, insertions, and deletions in logarithmic time. It is optimized for systems that read and write large blocks of data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data Structure Interview</title>
      <link>http://localhost:62354/post/0_data_structure_interview/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_data_structure_interview/</guid>
      <description>&lt;h2 id=&#34;what-is-the-difference-between-an-array-and-a-linked-list&#34;&gt;What is the difference between an array and a linked list?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Array:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fixed size (in most languages)&lt;/li&gt;&#xA;&lt;li&gt;Contiguous memory allocation&lt;/li&gt;&#xA;&lt;li&gt;Fast random access&lt;/li&gt;&#xA;&lt;li&gt;Insertion/deletion is expensive (except at the end)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Linked List:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dynamic size&lt;/li&gt;&#xA;&lt;li&gt;Non-contiguous memory allocation&lt;/li&gt;&#xA;&lt;li&gt;Slow random access&lt;/li&gt;&#xA;&lt;li&gt;Fast insertion/deletion&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;explain-the-difference-between-a-stack-and-a-queue&#34;&gt;Explain the difference between a stack and a queue.&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Stack:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Last-In-First-Out (LIFO) structure&lt;/li&gt;&#xA;&lt;li&gt;Push (insert) and pop (remove) operations occur at the same end&lt;/li&gt;&#xA;&lt;li&gt;Used for function calls, undo mechanisms, expression evaluation&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Queue:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gin</title>
      <link>http://localhost:62354/post/4_gin/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/4_gin/</guid>
      <description>&lt;h2 id=&#34;what-is-gin-web-framework&#34;&gt;What is Gin Web Framework?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Gin&lt;/strong&gt; is a lightweight, high-performance web framework for Go, inspired by Martini but with a focus on speed and efficiency.&lt;/p&gt;&#xA;&lt;h2 id=&#34;key-features-of-gin&#34;&gt;Key Features of Gin&lt;/h2&gt;&#xA;&lt;p&gt;Gin is packed with features that make web development in Go both enjoyable and efficient. Here are some of its standout features:&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-high-performance&#34;&gt;1. &lt;strong&gt;High Performance&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Gin is designed for speed. It outperforms many other Go frameworks by optimizing routing and minimizing middleware overhead, ensuring rapid request processing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go&#39;s `http.ListenAndServe`</title>
      <link>http://localhost:62354/post/2_go_listenandserve/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/2_go_listenandserve/</guid>
      <description>&lt;h2 id=&#34;implementation-overview&#34;&gt;Implementation Overview&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;ListenAndServe&lt;/code&gt; function is part of Go&amp;rsquo;s standard library in the &lt;code&gt;net/http&lt;/code&gt; package. Its primary purpose is to start an HTTP server that listens on a specified address and handles incoming requests.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ListenAndServe&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;addr&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Handler&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Server&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;Addr&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;addr&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Handler&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ListenAndServe&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Network Interview</title>
      <link>http://localhost:62354/post/0_network_interview/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_network_interview/</guid>
      <description>&lt;h2 id=&#34;what-is-the-osi-model&#34;&gt;What is the OSI model?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/0_network_interview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Physical Layer&lt;/li&gt;&#xA;&lt;li&gt;Data Link Layer&lt;/li&gt;&#xA;&lt;li&gt;Network Layer&lt;/li&gt;&#xA;&lt;li&gt;Transport Layer&lt;/li&gt;&#xA;&lt;li&gt;Session Layer&lt;/li&gt;&#xA;&lt;li&gt;Presentation Layer&lt;/li&gt;&#xA;&lt;li&gt;Application Layer&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;explain-the-difference-between-tcp-and-udp&#34;&gt;Explain the difference between TCP and UDP.&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;TCP (Transmission Control Protocol):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Connection-oriented&lt;/li&gt;&#xA;&lt;li&gt;Reliable, ensures all data is received&lt;/li&gt;&#xA;&lt;li&gt;Flow control and congestion control&lt;/li&gt;&#xA;&lt;li&gt;Slower than UDP&lt;/li&gt;&#xA;&lt;li&gt;Used for applications requiring high reliability (e.g., file transfer, email)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;UDP (User Datagram Protocol):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Network Protocols</title>
      <link>http://localhost:62354/post/1_network_protocols/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_network_protocols/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_network_protocols.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;transmission-control-protocol-tcp&#34;&gt;Transmission Control Protocol (TCP)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tcp-principles-and-mechanisms&#34;&gt;TCP Principles and Mechanisms&lt;/h3&gt;&#xA;&lt;p&gt;Key features:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Connection Establishment&lt;/strong&gt;: Three-way handshake (SYN, SYN-ACK, ACK)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reliable Delivery&lt;/strong&gt;: Acknowledgment and retransmission&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flow Control&lt;/strong&gt;: Sliding window mechanism&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Congestion Control&lt;/strong&gt;: Slow start, congestion avoidance, fast retransmit, and fast recovery&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Ordered Data Transfer&lt;/strong&gt;: Sequence numbers&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Error Detection&lt;/strong&gt;: Checksum&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Example of TCP header:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; 0                   1                   2                   3&#xA; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|          Source Port          |       Destination Port        |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|                        Sequence Number                        |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|                    Acknowledgment Number                      |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|  Data |           |U|A|P|R|S|F|                               |&#xA;| Offset| Reserved  |R|C|S|S|Y|I|            Window             |&#xA;|       |           |G|K|H|T|N|N|                               |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|           Checksum            |         Urgent Pointer        |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|                    Options                    |    Padding    |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;|                             data                              |&#xA;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Operating System Interview</title>
      <link>http://localhost:62354/post/0_operating_system_interview/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_operating_system_interview/</guid>
      <description>&lt;h2 id=&#34;explain-the-difference-between-a-process-and-a-thread&#34;&gt;Explain the difference between a process and a thread.&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Process:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Independent execution unit&lt;/li&gt;&#xA;&lt;li&gt;Has its own memory space&lt;/li&gt;&#xA;&lt;li&gt;Heavyweight, more resources&lt;/li&gt;&#xA;&lt;li&gt;Isolated from other processes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Thread:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lightweight unit of execution within a process&lt;/li&gt;&#xA;&lt;li&gt;Shares memory space with other threads in the same process&lt;/li&gt;&#xA;&lt;li&gt;Less resource-intensive&lt;/li&gt;&#xA;&lt;li&gt;Can communicate easily with other threads in the same process&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-do-processes-and-threads-communicate&#34;&gt;How do processes and threads communicate&lt;/h2&gt;&#xA;&lt;p&gt;Process communication methods:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Subnet and Subnet</title>
      <link>http://localhost:62354/post/2_subnet/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/2_subnet/</guid>
      <description>&lt;h2 id=&#34;what-is-a-subnet&#34;&gt;What is a Subnet?&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;subnet&lt;/strong&gt; is a way to divide a large network into smaller, more manageable pieces. Think of it like dividing a big city into neighborhoods. Each subnet (neighborhood) has its own group of devices (houses), but all are still part of the same overall network (city).&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-subnet-mask&#34;&gt;What is a Subnet Mask?&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;subnet mask&lt;/strong&gt; is a number used to help identify which part of an IP address belongs to the &lt;strong&gt;network&lt;/strong&gt; (city) and which part identifies the &lt;strong&gt;device&lt;/strong&gt; (house). It’s like a divider that separates the network part from the device part in an IP address.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Epoll</title>
      <link>http://localhost:62354/post/1_epoll/</link>
      <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_epoll/</guid>
      <description>&lt;h1 id=&#34;epoll-linux-an-efficient-io-multiplexing-mechanism&#34;&gt;&lt;code&gt;epoll&lt;/code&gt; (Linux): An Efficient I/O Multiplexing Mechanism&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;epoll&lt;/code&gt; operates on an event-driven model, meaning it only notifies the application when an event occurs on a specific file descriptor, unlike &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;poll&lt;/code&gt; which poll all descriptors regardless of activity. This drastically reduces overhead, especially when managing numerous connections.&lt;/p&gt;&#xA;&lt;h2 id=&#34;key-features-and-functionality&#34;&gt;Key Features and Functionality&lt;/h2&gt;&#xA;&lt;p&gt;The core functionality revolves around three system calls:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;epoll_create(size)&lt;/code&gt;:&lt;/strong&gt; Creates an &lt;code&gt;epoll&lt;/code&gt; instance and returns an &lt;code&gt;epoll&lt;/code&gt; file descriptor.  While &lt;code&gt;size&lt;/code&gt; was initially used to hint at the number of file descriptors, modern kernels largely ignore it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL&#39;s Transaction Isolation Levels</title>
      <link>http://localhost:62354/post/2_mysql_isolation_levels/</link>
      <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/2_mysql_isolation_levels/</guid>
      <description>&lt;h1 id=&#34;sql-transaction-isolation-levels&#34;&gt;SQL Transaction Isolation Levels&lt;/h1&gt;&#xA;&lt;p&gt;Transaction isolation levels define the degree to which the operations in one transaction are visible to other concurrent transactions and the types of reads and writes that are allowed.&lt;/p&gt;&#xA;&lt;h2 id=&#34;comparison-table&#34;&gt;Comparison Table&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Isolation Level&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Dirty Read&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Non-repeatable Read&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Phantom Read&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;READ UNCOMMITTED&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Yes&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Yes&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Yes&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;READ COMMITTED&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;No&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Yes&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Yes&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;REPEATABLE READ&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;No&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;No&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Yes&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;SERIALIZABLE&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;No&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;No&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;No&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;explanation-of-isolation-levels&#34;&gt;Explanation of Isolation Levels&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-read-uncommitted&#34;&gt;1. READ UNCOMMITTED&lt;/h3&gt;&#xA;&lt;p&gt;This is the lowest isolation level. Transactions can read data that has been modified by other transactions but not yet committed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Eval and Evalsha</title>
      <link>http://localhost:62354/post/3_eval_and_evalsha/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/3_eval_and_evalsha/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;EVAL&lt;/code&gt; and &lt;code&gt;EVALSHA&lt;/code&gt; are Redis commands used to execute Lua scripts within the Redis server.  They differ primarily in how they handle script loading and execution:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;EVAL&lt;/code&gt;:&lt;/strong&gt; This command takes the Lua script as an argument.  Redis parses and hashes the script every time &lt;code&gt;EVAL&lt;/code&gt; is called.  This adds overhead, especially for frequently executed scripts.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;EVALSHA&lt;/code&gt;:&lt;/strong&gt; This command takes the SHA1 hash of the Lua script as an argument.  Redis retrieves the script from its internal cache using this hash.  If the script is found, it&amp;rsquo;s executed directly, bypassing the parsing and hashing steps.  This results in significantly faster execution times for frequently used scripts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Memory Allocation</title>
      <link>http://localhost:62354/post/8_go_memory_allocation/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/8_go_memory_allocation/</guid>
      <description>&lt;h3 id=&#34;how-does-go-handel-memory-allocation&#34;&gt;How does Go handel memory allocation&lt;/h3&gt;&#xA;&lt;h4 id=&#34;memory-allocator-overview&#34;&gt;Memory Allocator Overview&lt;/h4&gt;&#xA;&lt;p&gt;The Go memory allocator uses a hierarchical structure:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Heap&lt;/strong&gt;: The main memory area where dynamically allocated objects reside.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Spans&lt;/strong&gt;: Large blocks of memory (usually 8KB) used to allocate objects.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt;: Individual allocated pieces of memory.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;&#xA;    graph TD&#xA;&#x9;    Heap --&amp;gt; Span1[Span 1]&#xA;&#x9;    Heap --&amp;gt; Span2[Span 2]&#xA;&#x9;    Heap --&amp;gt; Span3[Span 3]&#xA;&#x9;    Span1 --&amp;gt; Obj1[Object 1]&#xA;&#x9;    Span1 --&amp;gt; Obj2[Object 2]&#xA;&#x9;    Span2 --&amp;gt; Obj3[Object 3]&#xA;&#x9;    Span2 --&amp;gt; Obj4[Object 4]&#xA;&#x9;    Span3 --&amp;gt; Obj5[Object 5]&#xA;&lt;/pr</description>
    </item>
    <item>
      <title>Redlock Algorithm</title>
      <link>http://localhost:62354/post/4_redlock_algorithm/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/4_redlock_algorithm/</guid>
      <description>&lt;h1 id=&#34;redlock-algorithm-distributed-lock-management&#34;&gt;Redlock Algorithm: Distributed Lock Management&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;The Redlock algorithm is a distributed lock algorithm designed to provide a reliable locking mechanism in distributed systems. It was proposed by the Redis community as a way to implement distributed locks using multiple independent Redis instances.&lt;/p&gt;&#xA;&lt;h2 id=&#34;purpose&#34;&gt;Purpose&lt;/h2&gt;&#xA;&lt;p&gt;The main purpose of the Redlock algorithm is to ensure that:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Mutual exclusion is guaranteed&lt;/li&gt;&#xA;&lt;li&gt;Deadlock free operation is possible&lt;/li&gt;&#xA;&lt;li&gt;Fault tolerance is achieved up to a certain degree&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;algorithm-overview&#34;&gt;Algorithm Overview&lt;/h2&gt;&#xA;&lt;p&gt;The Redlock algorithm uses multiple Redis instances (typically 5) to achieve consensus on lock acquisition and release. The basic idea is to acquire the lock in the majority of the instances to consider it as a successful lock acquisition.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go&#39;s GMP Model</title>
      <link>http://localhost:62354/post/7_go_gmp_model/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/7_go_gmp_model/</guid>
      <description>&lt;h3 id=&#34;what-is-the-gpm-model-in-go&#34;&gt;What is the GPM model in Go?&lt;/h3&gt;&#xA;&lt;h4 id=&#34;gmp-model&#34;&gt;GMP Model&lt;/h4&gt;&#xA;&lt;p&gt;The GMP model is the cornerstone of Go&amp;rsquo;s runtime scheduler.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;G (Goroutine)&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Represents a goroutine, which is a lightweight thread of execution.&lt;/li&gt;&#xA;&lt;li&gt;Contains the stack, the instruction pointer, and other information important for scheduling.&lt;/li&gt;&#xA;&lt;li&gt;Many Gs can exist at the same time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;P (Processor)&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Represents a logical processor, which can be thought of as a context for scheduling.&lt;/li&gt;&#xA;&lt;li&gt;Acts as a local scheduler, managing a queue of runnable goroutines.&lt;/li&gt;&#xA;&lt;li&gt;The number of Ps is typically equal to &lt;code&gt;GOMAXPROCS&lt;/code&gt;, which by default is the number of CPU cores available.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;M (Machine)&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang Interview</title>
      <link>http://localhost:62354/post/0_go_interview/</link>
      <pubDate>Sat, 14 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_go_interview/</guid>
      <description>&lt;h3 id=&#34;how-does-go-handle-dependencies&#34;&gt;How does Go handle dependencies?&lt;/h3&gt;&#xA;&lt;p&gt;Go uses a module system for dependency management. The &lt;code&gt;go.mod&lt;/code&gt; file specifies the module&amp;rsquo;s dependencies and their versions. The &lt;code&gt;go get&lt;/code&gt; command is used to download and install dependencies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-the-difference-between-go-run-and-go-build-&#34;&gt;What is the difference between &lt;code&gt;go run&lt;/code&gt; and &lt;code&gt;go build&lt;/code&gt; ?&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Feature&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;code&gt;go run&lt;/code&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;code&gt;go build&lt;/code&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Purpose&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Compile and run in one step&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Compile to a permanent executable&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Temporary executable (deleted)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Permanent executable on disk&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Use Case&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Quick testing of small programs&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Building applications for deployment&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Slower due to temporary compilation&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Faster execution of compiled binary&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Debugging&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Limited debugging capabilities&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Supports debugging and profiling&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Configuration Options&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;None&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Various options for customization&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;&lt;code&gt;go run&lt;/code&gt;&lt;/strong&gt; for quick tests and development.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;&lt;code&gt;go build&lt;/code&gt;&lt;/strong&gt; for creating deployable binaries.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;what-is-a-goroutine&#34;&gt;What is a goroutine?&lt;/h3&gt;&#xA;&lt;p&gt;A goroutine is a lightweight thread managed by the Go runtime. It allows concurrent execution of functions or methods. Goroutines are created using the &lt;code&gt;go&lt;/code&gt; keyword followed by a function call.&lt;/p&gt;</description>
    </item>
    <item>
      <title>System Design</title>
      <link>http://localhost:62354/post/0_system_design/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_system_design/</guid>
      <description>&lt;h2 id=&#34;how-to-solve-cache-penetration&#34;&gt;How to Solve Cache Penetration?&lt;/h2&gt;&#xA;&lt;p&gt;Cache penetration occurs when requests for non-existent data bypass the cache and hit the database repeatedly. Solutions include:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Caching Empty Results&lt;/strong&gt;: Store empty results for non-existent keys with a short expiration time.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bloom Filters&lt;/strong&gt;: Use a Bloom filter to check if a key exists before querying the database.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Rate Limiting&lt;/strong&gt;: Limit requests for certain keys to prevent overwhelming the database with requests for non-existent data.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-to-solve-cache-avalanche&#34;&gt;How to Solve Cache Avalanche?&lt;/h2&gt;&#xA;&lt;p&gt;Cache avalanche involves a massive number of database hits due to the simultaneous expiration of many cache entries or a cache server failure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Pprof</title>
      <link>http://localhost:62354/post/3_go_pprof/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/3_go_pprof/</guid>
      <description>&lt;h1 id=&#34;overview-of-pprof&#34;&gt;Overview of Pprof&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;pprof&lt;/code&gt; is a tool that comes with Go&amp;rsquo;s standard library and is used for collecting and viewing profiling data. It can collect different types of profiles including:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;CPU Profile&lt;/strong&gt;: Measures where the program spends most of its time.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Memory Profile&lt;/strong&gt;: Measures the amount of memory allocated and retained.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Block Profile&lt;/strong&gt;: Measures where the program spends time waiting for synchronization primitives.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mutex Profile&lt;/strong&gt;: Measures contention on mutexes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;setting-up-pprof&#34;&gt;Setting Up pprof&lt;/h1&gt;&#xA;&lt;p&gt;To use &lt;code&gt;pprof&lt;/code&gt;, you need to import the &lt;code&gt;net/http/pprof&lt;/code&gt; package and set up HTTP server to serve the profiling data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis, Pika, and Codis</title>
      <link>http://localhost:62354/post/1_redis_pika_codis/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_redis_pika_codis/</guid>
      <description>&lt;h1 id=&#34;comprehensive-technical-analysis-redis-pika-and-codis&#34;&gt;Comprehensive Technical Analysis: Redis, Pika, and Codis&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In the realm of distributed data storage and caching systems, Redis, Pika, and Codis represent three distinct approaches to solving scalability, persistence, and performance challenges. This comprehensive analysis delves deep into the architectures, features, and use cases of these systems, providing detailed code examples and visual representations to facilitate a thorough understanding.&lt;/p&gt;&#xA;&lt;h2 id=&#34;redis&#34;&gt;Redis&lt;/h2&gt;&#xA;&lt;p&gt;Redis (Remote Dictionary Server) is an open-source, in-memory data structure store that has become a cornerstone in modern application architectures. Its versatility allows it to function as a database, cache, message broker, and queue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git</title>
      <link>http://localhost:62354/post/0_git/</link>
      <pubDate>Sun, 08 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_git/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/0_git.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/0_git-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;git-cheat-sheet&#34;&gt;GIT CHEAT SHEET&lt;/h1&gt;&#xA;&lt;h2 id=&#34;create&#34;&gt;CREATE&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Clone an existing repository:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone ssh://user@domain.com/repo.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create a new local repository:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;local-changes&#34;&gt;LOCAL CHANGES&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Changed files in your working directory:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git status&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;Changes to tracked files:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git diff&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Go Garbage Collection</title>
      <link>http://localhost:62354/post/6_go_garbage_collection/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/6_go_garbage_collection/</guid>
      <description>&lt;h3 id=&#34;how-does-garbage-collection-work-in-go&#34;&gt;How does garbage collection work in Go?&lt;/h3&gt;&#xA;&lt;h4 id=&#34;garbage-collection&#34;&gt;Garbage Collection&lt;/h4&gt;&#xA;&lt;p&gt;Go uses a concurrent, tri-color mark-and-sweep garbage collector with write barriers.&lt;/p&gt;&#xA;&lt;h4 id=&#34;garbage-collection-phases&#34;&gt;Garbage Collection Phases&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mark Setup&lt;/strong&gt;: Preparation for marking phase.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Marking&lt;/strong&gt;: Identifying live objects.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mark Termination&lt;/strong&gt;: Completion of marking phase.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sweep&lt;/strong&gt;: Reclaiming memory from dead objects.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;&#xA;    graph LR&#xA;&#x9;    A[Mark Setup] --&amp;gt; B[Marking]&#xA;&#x9;    B --&amp;gt; C[Mark Termination]&#xA;&#x9;    C --&amp;gt; D[Sweep]&#xA;&#x9;    D --&amp;gt; A&#xA;&lt;/pr</description>
    </item>
    <item>
      <title>Go&#39;s Sync</title>
      <link>http://localhost:62354/post/5_sync/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/5_sync/</guid>
      <description>&lt;h2 id=&#34;syncmutex&#34;&gt;&lt;code&gt;sync.Mutex&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Mutex provides mutual exclusion for shared resources.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Mutex&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int32&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;// State of the mutex (locked/unlocked)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sema&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;uint32&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Semaphore for blocking goroutines&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Lock acquires the mutex, blocking if necessary.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Mutex&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Lock&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Check if already locked; if so, block until unlocked.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Unlock releases the mutex.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Mutex&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Unlock&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Update state and unblock waiting goroutines if any.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Jaeger</title>
      <link>http://localhost:62354/post/1_jaeger/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_jaeger/</guid>
      <description>&lt;p&gt;direct-to-storage architecture&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_jaeger.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;architecture with Kafka as intermediate buffer&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_jaeger-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-jaeger&#34;&gt;What is Jaeger?&lt;/h2&gt;&#xA;&lt;p&gt;Jaeger is an open-source, end-to-end distributed tracing system. It helps monitor and troubleshoot transactions in complex, microservices-based architectures.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-problem-does-distributed-tracing-solve&#34;&gt;What problem does distributed tracing solve?&lt;/h2&gt;&#xA;&lt;p&gt;Distributed tracing helps in understanding the flow of requests through a distributed system, identifying performance bottlenecks, and diagnosing issues in microservices architectures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mysql Interview</title>
      <link>http://localhost:62354/post/0_mysql_interview/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_mysql_interview/</guid>
      <description>&lt;h2 id=&#34;what-are-the-main-mysql-storage-engines-and-their-differences&#34;&gt;What are the main MySQL storage engines and their differences?&lt;/h2&gt;&#xA;&lt;p&gt;MySQL supports multiple storage engines, each with distinct characteristics:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;InnoDB:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Default engine since MySQL 5.5&lt;/li&gt;&#xA;&lt;li&gt;Supports ACID transactions&lt;/li&gt;&#xA;&lt;li&gt;Provides row-level locking&lt;/li&gt;&#xA;&lt;li&gt;Supports foreign keys and relationship constraints&lt;/li&gt;&#xA;&lt;li&gt;Uses clustered indexes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;MyISAM:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Older engine, used as default before MySQL 5.5&lt;/li&gt;&#xA;&lt;li&gt;Non-transactional&lt;/li&gt;&#xA;&lt;li&gt;Table-level locking&lt;/li&gt;&#xA;&lt;li&gt;Faster for read-heavy operations&lt;/li&gt;&#xA;&lt;li&gt;Supports full-text indexing&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Memory (HEAP):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mysql&#39;s Join Types Comparison</title>
      <link>http://localhost:62354/post/1_mysql_join_types_comparison/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_mysql_join_types_comparison/</guid>
      <description>&lt;h1 id=&#34;input-tables&#34;&gt;Input Tables&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_mysql_join_types_comparison.png&#34; alt=&#34;|400*400&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;inner-join&#34;&gt;INNER JOIN&lt;/h1&gt;&#xA;&lt;p&gt;INNER JOIN returns only the rows where there&amp;rsquo;s a match between both tables based on the join condition.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; A.ID, A.Name, B.ID, B.Department&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; A&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; B &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; A.ID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; B.ID  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_mysql_join_types_comparison-1.png&#34; alt=&#34;|400*400&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;left-join&#34;&gt;LEFT JOIN&lt;/h1&gt;&#xA;&lt;p&gt;LEFT JOIN returns all rows from the left table (A), and the matched rows from the right table (B). If there&amp;rsquo;s no match, NULL values are used for the right table columns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus</title>
      <link>http://localhost:62354/post/2_prometheus/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/2_prometheus/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/2_prometheus.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-prometheus&#34;&gt;What is Prometheus?&lt;/h2&gt;&#xA;&lt;p&gt;Prometheus is an open-source systems monitoring and alerting toolkit. It collects and stores metrics as time series data, allowing for flexible querying and real-time alerting.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-the-main-components-of-prometheus&#34;&gt;What are the main components of Prometheus?&lt;/h2&gt;&#xA;&lt;p&gt;The main components of Prometheus are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Prometheus server (for scraping and storing time series data)&lt;/li&gt;&#xA;&lt;li&gt;Client libraries (for instrumenting application code)&lt;/li&gt;&#xA;&lt;li&gt;Push gateway (for supporting short-lived jobs)&lt;/li&gt;&#xA;&lt;li&gt;Exporters (for services that don&amp;rsquo;t expose Prometheus metrics directly)&lt;/li&gt;&#xA;&lt;li&gt;Alertmanager (for handling alerts)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-does-prometheus-collect-metrics&#34;&gt;How does Prometheus collect metrics?&lt;/h2&gt;&#xA;&lt;p&gt;Prometheus uses a pull model to collect metrics. It scrapes metrics from configured targets at regular intervals, usually by HTTP endpoints on these targets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Protobuf</title>
      <link>http://localhost:62354/post/3_protobuf/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/3_protobuf/</guid>
      <description>&lt;h1 id=&#34;protocol-buffers&#34;&gt;Protocol Buffers&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Protocol Buffers (Protobuf) is a language-agnostic, platform-neutral extensible mechanism for serializing structured data. Developed by Google, it aims to be faster, smaller, and simpler than XML. This report provides an in-depth analysis of Protobuf&amp;rsquo;s principles, performance characteristics, and practical implications.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-historical-context-and-development&#34;&gt;2. Historical Context and Development&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Origin&lt;/strong&gt;: Developed internally at Google in the early 2000s.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Open Source Release&lt;/strong&gt;: Made publicly available in 2008.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Versions&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Proto1: Initial release (deprecated)&lt;/li&gt;&#xA;&lt;li&gt;Proto2: Introduced optional and required fields&lt;/li&gt;&#xA;&lt;li&gt;Proto3: Simplified syntax, removed required fields&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-core-principles-of-protocol-buffers&#34;&gt;3. Core Principles of Protocol Buffers&lt;/h2&gt;&#xA;&lt;h3 id=&#34;message-definition-language&#34;&gt;Message Definition Language&lt;/h3&gt;&#xA;&lt;p&gt;Protobuf uses a simple IDL (Interface Definition Language) to describe the structure of data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis Performance Issues</title>
      <link>http://localhost:62354/post/2_redis_performance_issues/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/2_redis_performance_issues/</guid>
      <description>&lt;h1 id=&#34;a-comprehensive-guide-to-troubleshooting-redis-performance-issues&#34;&gt;A comprehensive guide to troubleshooting Redis performance issues&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Redis is renowned for its high performance, capable of handling 100,000 operations per second. However, users may encounter unexpected latency issues in various scenarios:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Same commands sometimes fast, sometimes slow&lt;/li&gt;&#xA;&lt;li&gt;Simple operations like SET and DEL taking unexpectedly long&lt;/li&gt;&#xA;&lt;li&gt;Temporary slowdowns that resolve themselves&lt;/li&gt;&#xA;&lt;li&gt;Sudden performance degradation after long periods of stability&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This comprehensive guide (approximately 20,000 words) aims to provide a thorough troubleshooting approach for Redis performance issues.&lt;/p&gt;</description>
    </item>
    <item>
      <title>writing skills</title>
      <link>http://localhost:62354/post/writing-skills/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/writing-skills/</guid>
      <description>&lt;h1 id=&#34;1-小作文&#34;&gt;1. 小作文&lt;/h1&gt;&#xA;&lt;p&gt;对所看到的数据、信息进行客观、准确、全面的描述。&lt;/p&gt;&#xA;&lt;h2 id=&#34;11-小作文图表分类&#34;&gt;1.1. 小作文图表分类&lt;/h2&gt;&#xA;&lt;p&gt;Line graph&#xA;Bar chart&#xA;Pie chart&#xA;Table&lt;/p&gt;&#xA;&lt;h2 id=&#34;12-图表类小作文中的图表特征&#34;&gt;1.2. 图表类小作文中的图表特征&lt;/h2&gt;&#xA;&lt;p&gt;静态图 时间点小于等于1 difference&#xA;动态图 时间点大于2 change&lt;/p&gt;&#xA;&lt;h3 id=&#34;数据&#34;&gt;数据&lt;/h3&gt;&#xA;&lt;p&gt;最大值 最小值 等值 差值 倍数 大于 小于&lt;/p&gt;&#xA;&lt;h3 id=&#34;趋势动态图使用&#34;&gt;趋势，动态图使用&lt;/h3&gt;&#xA;&lt;p&gt;上升 下降 波动 不变&lt;/p&gt;&#xA;&lt;h3 id=&#34;程度大小&#34;&gt;程度大小&lt;/h3&gt;&#xA;&lt;p&gt;剧烈 平缓&lt;/p&gt;&#xA;&lt;h2 id=&#34;13-图表类小作文的段落组成&#34;&gt;1.3. 图表类小作文的段落组成&lt;/h2&gt;&#xA;&lt;h3 id=&#34;改写段&#34;&gt;改写段&lt;/h3&gt;&#xA;&lt;p&gt;复述图表介绍&lt;/p&gt;&#xA;&lt;h3 id=&#34;概述段&#34;&gt;概述段&lt;/h3&gt;&#xA;&lt;p&gt;宏观概述&#xA;2～3句话&#xA;常见：2～3个要点&#xA;少数：1个要点&lt;/p&gt;&#xA;&lt;h3 id=&#34;细节段&#34;&gt;细节段&lt;/h3&gt;&#xA;&lt;p&gt;描述重要细节&#xA;4～5句话&lt;/p&gt;&#xA;&lt;h3 id=&#34;细节段-1&#34;&gt;细节段&lt;/h3&gt;&#xA;&lt;p&gt;描述重要细节&#xA;4～5句话&lt;/p&gt;</description>
    </item>
    <item>
      <title>chart essay</title>
      <link>http://localhost:62354/post/chart-essay/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/chart-essay/</guid>
      <description>&lt;h1 id=&#34;图表类小作文补充表达&#34;&gt;&lt;strong&gt;【图表类小作文补充表达】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;表达程度&#34;&gt;&lt;strong&gt;【表达：程度】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;程度&#34;&gt;&lt;strong&gt;程度&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;逐渐的&#34;&gt;&lt;strong&gt;逐渐的&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;slightly&#xA;modestly&#xA;gradually&lt;/p&gt;&#xA;&lt;h3 id=&#34;稳定的&#34;&gt;&lt;strong&gt;稳定的&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;steadily&#xA;sustained&lt;/p&gt;&#xA;&lt;h3 id=&#34;显著的&#34;&gt;&lt;strong&gt;显著的&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;noticeably&#xA;remarkably&#xA;markedly&lt;/p&gt;&#xA;&lt;h3 id=&#34;巨大的&#34;&gt;&lt;strong&gt;巨大的&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;significantly&#xA;remarkably&#xA;dramatically&#xA;rapidly&#xA;sharply&lt;/p&gt;&#xA;&lt;h2 id=&#34;大量的少量的&#34;&gt;&lt;strong&gt;大量的/少量的&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;a great/signifcant/major proportion (of&amp;hellip;)&#xA;(only) a fraction (of&amp;hellip;)&lt;/p&gt;&#xA;&lt;h2 id=&#34;最大量少量&#34;&gt;&lt;strong&gt;最大量/少量&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;greatest/most significant proportion (of&amp;hellip;)&#xA;smallest/least significant proportion (of&amp;hellip;)&lt;/p&gt;&#xA;&lt;h2 id=&#34;以不同的程度&#34;&gt;&lt;strong&gt;以不同的程度&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;to different/varying degrees&lt;/p&gt;&#xA;&lt;h1 id=&#34;表达分别的&#34;&gt;&lt;strong&gt;【表达：分别的】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;分别的&#34;&gt;&lt;strong&gt;分别的&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;respectively&#xA;each&lt;/p&gt;&#xA;&lt;h1 id=&#34;表达年龄&#34;&gt;&lt;strong&gt;【表达：年龄】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;year-old&#34;&gt;&lt;strong&gt;year old&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;years-old&#34;&gt;&lt;strong&gt;years old&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;people of 18-24 years old&lt;/p&gt;</description>
    </item>
    <item>
      <title>correction of anterior humerus</title>
      <link>http://localhost:62354/post/correction-of-anterior-humerus/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/correction-of-anterior-humerus/</guid>
      <description>&lt;p&gt;Stretching pectoralis major and pectoralis minor&#xA;Stretching the anterior shoulder girdle&#xA;External rotation with internal rotation of the shoulder joint&#xA;Internal rotation with external rotation of the shoulder joint&#xA;Assisted Humeral Push-Up and Lateral Raise&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deep Dive Into Design Patterns</title>
      <link>http://localhost:62354/post/1_deep_dive_into_design_patterns/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/1_deep_dive_into_design_patterns/</guid>
      <description>&lt;h1 id=&#34;一面向对象-程序设计-简介&#34;&gt;&lt;strong&gt;一、面向对象 程序设计 简介&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;对象之间的关系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/1_deep_dive_into_design_patterns.png&#34; alt=&#34;img/1_deep_dive_into_design_patterns.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;依赖&lt;/strong&gt;:对类 B 进行修改会影响到类 A 。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;关联&lt;/strong&gt;:对象 A 知道对象 B。类 A 依赖于类 B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;聚合&lt;/strong&gt;:对象A知道对象B且由B构成。类A依赖于类B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;组合&lt;/strong&gt;:对象 A 知道对象 B、由 B 构成而且管理着 B 的生命周 期。类 A&#xA;依赖于类 B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;实现&lt;/strong&gt;: 类 A 定义的方法由接口 B 声明。 对象 A 可被视为对象 B。类 A&#xA;依赖于类 B。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;继承&lt;/strong&gt;: 类 A 继承类 B 的接口和实现， 但是可以对其进行扩 展。对象 A&#xA;可被视为对象 B。类 A 依赖于类 B。&lt;/p&gt;&#xA;&lt;h1 id=&#34;二设计模式简介&#34;&gt;&lt;strong&gt;二、设计模式简介&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;设计模式是针对软件设计中常见问题的工具箱， 其中的工具&#xA;就是各种&lt;strong&gt;经过实践验证的解决方案。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dive Into Python 3</title>
      <link>http://localhost:62354/post/dive_into_python_3/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/dive_into_python_3/</guid>
      <description>&lt;h1 id=&#34;1-your-first-python-program&#34;&gt;1. Your First Python Program&lt;/h1&gt;&#xA;&lt;h2 id=&#34;11-diving-in&#34;&gt;1.1. Diving In&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python3 humansize.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;12-declaring-functions&#34;&gt;1.2. Declaring Functions&lt;/h2&gt;&#xA;&lt;h3 id=&#34;121-optional-and-named-arguments&#34;&gt;1.2.1. Optional and Named Arguments&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;approximate_size&lt;/span&gt;(size, a_kilobyte_is_1024_bytes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;13-writing-readable-code&#34;&gt;1.3. Writing Readable Code&lt;/h2&gt;&#xA;&lt;h3 id=&#34;131-documentation-strings&#34;&gt;1.3.1. Documentation Strings&lt;/h3&gt;&#xA;&lt;p&gt;Triple quotes&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;approximate_size&lt;/span&gt;(size, a_kilobyte_is_1024_bytes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;Convert a file size to human-readable form.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Keyword arguments:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    size -- file size in bytes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    a_kilobyte_is_1024_bytes -- if True (default), use multiples of 1024&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                                if False, use multiples of 1000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Returns: string&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>flowchart essay</title>
      <link>http://localhost:62354/post/flowchart-essay/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/flowchart-essay/</guid>
      <description>&lt;h1 id=&#34;流程图类小作文补充表达&#34;&gt;&lt;strong&gt;【流程图类小作文补充表达】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;表达持续时间&#34;&gt;&lt;strong&gt;【表达：持续时间】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;持续时间的表达&#34;&gt;&lt;strong&gt;持续时间的表达&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;It takes TIME to&#xA;This stage lasts for TIME&#xA;After a period of TIME&#xA;During a TIME period&#xA;For TIME&lt;/p&gt;&#xA;&lt;h1 id=&#34;表达尺寸&#34;&gt;&lt;strong&gt;【表达：尺寸】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;不同形状&#34;&gt;&lt;strong&gt;不同形状&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;square/squared&#xA;rectangle/rectangular&#xA;circle/circular&#xA;triangle/triangular&#xA;trapezoid/trapezoidal&lt;/p&gt;&#xA;&lt;h2 id=&#34;长度宽度深度&#34;&gt;&lt;strong&gt;长度/宽度/深度&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;length (long)&#xA;width (wide)&#xA;depth (deep)&lt;/p&gt;&#xA;&lt;h2 id=&#34;宽窄&#34;&gt;&lt;strong&gt;宽窄&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;wide/broad&#xA;narrow/tight&lt;/p&gt;&#xA;&lt;h2 id=&#34;薄厚&#34;&gt;&lt;strong&gt;薄厚&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;thin&#xA;thick&lt;/p&gt;&#xA;&lt;h1 id=&#34;表达动植物相关词汇&#34;&gt;&lt;strong&gt;【表达：动植物相关词汇】&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;植物相关词汇&#34;&gt;&lt;strong&gt;植物相关词汇&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;种子&#34;&gt;&lt;strong&gt;种子&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;seeds&lt;/p&gt;&#xA;&lt;h3 id=&#34;幼苗&#34;&gt;&lt;strong&gt;幼苗&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;seedlings&lt;/p&gt;&#xA;&lt;h3 id=&#34;发芽&#34;&gt;&lt;strong&gt;发芽&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;sprout&#xA;germinate&lt;/p&gt;</description>
    </item>
    <item>
      <title>listening skills</title>
      <link>http://localhost:62354/post/listening-skills/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/listening-skills/</guid>
      <description>&lt;h1 id=&#34;基础知识&#34;&gt;基础知识&lt;/h1&gt;&#xA;&lt;p&gt;数字&#xA;连读：double 0 , triple 0&#xA;7-screen cinema&#xA;4-liter engine&#xA;时间、地点、生活常识&lt;/p&gt;&#xA;&lt;h1 id=&#34;圈关键词&#34;&gt;圈关键词&lt;/h1&gt;&#xA;&lt;h3 id=&#34;前二后二-竖向比较&#34;&gt;前二后二 竖向比较&lt;/h3&gt;&#xA;&lt;p&gt;最稳定：&#xA;数字、名词、专有名词&lt;/p&gt;&#xA;&lt;p&gt;不稳定：&#xA;形容词、动词&lt;/p&gt;&#xA;&lt;p&gt;大坑词：&#xA;形容词（比如最高级&amp;hellip;）&#xA;常见反义词（比如 close open&amp;hellip;）&#xA;否定词（比如 no）&lt;/p&gt;&#xA;&lt;h3 id=&#34;找不同看特点&#34;&gt;找不同看特点&lt;/h3&gt;&#xA;&lt;p&gt;较稳定：&#xA;听原词，好定位&lt;/p&gt;&#xA;&lt;p&gt;不稳定：&#xA;找替换词，灵活应对&lt;/p&gt;&#xA;&lt;p&gt;大坑词：&#xA;有陷阱，要小心&lt;/p&gt;&#xA;&lt;h3 id=&#34;三大特征&#34;&gt;三大特征&lt;/h3&gt;&#xA;&lt;p&gt;原词(发音)&lt;/p&gt;&#xA;&lt;p&gt;逻辑表达&#xA;and&#xA;so, because&#xA;one thing, another thing, the other&#xA;but&#xA;particularly&#xA;in fact&#xA;then&#xA;for example&lt;/p&gt;&#xA;&lt;p&gt;替换改写&lt;/p&gt;&#xA;&lt;h1 id=&#34;错题七坑&#34;&gt;错题七坑&lt;/h1&gt;&#xA;&lt;p&gt;词音（连读）&#xA;拼写&#xA;句子&#xA;逻辑&#xA;改写&#xA;格式&#xA;单复数&lt;/p&gt;</description>
    </item>
    <item>
      <title>reading skills</title>
      <link>http://localhost:62354/post/reading-skills/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/reading-skills/</guid>
      <description>&lt;h1 id=&#34;雅思阅读&#34;&gt;雅思阅读&lt;/h1&gt;&#xA;&lt;p&gt;词汇 + 语法 + 解题技巧 + 阅读量&lt;/p&gt;&#xA;&lt;h1 id=&#34;语法&#34;&gt;语法&lt;/h1&gt;&#xA;&lt;h2 id=&#34;从句&#34;&gt;从句&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/reading-skills.png&#34; alt=&#34;img/reading-skills.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;非谓语&#34;&gt;非谓语&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/reading-skills-46.png&#34; alt=&#34;img/reading-skills-46.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;核心同义替换&#34;&gt;核心：同义替换&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;同义词&lt;/li&gt;&#xA;&lt;li&gt;同义短语&lt;/li&gt;&#xA;&lt;li&gt;同义句子（主动被动）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;题型分类&#34;&gt;题型分类&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-顺序题&#34;&gt;1. 顺序题&lt;/h2&gt;&#xA;&lt;p&gt;题型内部的出题顺序&lt;br&gt;&#xA;（一般为顺序）&#xA;判断&#xA;填空 图形填空 选词填空 回答问题&#xA;单选&#xA;句子匹配&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-乱序题&#34;&gt;2. 乱序题&lt;/h2&gt;&#xA;&lt;p&gt;段落匹配 Which paragraph contains&#xA;人名/学说/国家/公司等信息匹配&#xA;段落大意 Heading&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-特殊题&#34;&gt;3. 特殊题&lt;/h2&gt;&#xA;&lt;p&gt;选文章标题 Title/副标题 Subtitle&#xA;多选&lt;/p&gt;&#xA;&lt;h1 id=&#34;平行做题法三步走&#34;&gt;平行做题法：三步走&lt;/h1&gt;&#xA;&lt;p&gt;预读题画关键词；&#xA;带着问题去读文章定位，文章只读一遍、各题型平行&#xA;做题；&#xA;对比答案句和题目进行解题&#xA;&lt;img src=&#34;http://localhost:62354/img/reading-skills-47.png&#34; alt=&#34;img/reading-skills-47.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Refactor</title>
      <link>http://localhost:62354/post/0_refactor/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_refactor/</guid>
      <description>&lt;p&gt;Essentially, &lt;strong&gt;refactoring is improving the design of code after it&amp;rsquo;s been written&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;If you want to add a feature to a program, but find that the code isn&amp;rsquo;t easy to change due to a lack of good structure, refactor that program first so that it&amp;rsquo;s easier to add the feature, and then add the feature.&lt;/p&gt;&#xA;&lt;p&gt;It is the change in &lt;strong&gt;requirements&lt;/strong&gt; that makes refactoring necessary.&lt;/p&gt;&#xA;&lt;p&gt;The refactoring technique is to &lt;strong&gt;modify the program at a tiny pace&lt;/strong&gt;. If you make a mistake, it&amp;rsquo;s easy to spot it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>speaking skills</title>
      <link>http://localhost:62354/post/speaking-skills/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/speaking-skills/</guid>
      <description>&lt;h1 id=&#34;1-general-intro-to-ielts-speaking-test&#34;&gt;1. General Intro to IELTS Speaking Test&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introductory-frame&#34;&gt;Introductory Frame&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:62354/img/speaking-skills.png&#34; alt=&#34;img/speaking-skills.png&#34;&gt;&#xA;Full Name&#xA;English Name&#xA;Country&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-process&#34;&gt;The Process&lt;/h2&gt;&#xA;&lt;h3 id=&#34;part1-4-5-min-3-topics-9-questions&#34;&gt;Part1 4-5 min, 3 topics, 9 questions&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Questions about yourself&lt;/li&gt;&#xA;&lt;li&gt;Topics to do with daily life&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Is there anything you don&amp;rsquo;t like about your living area?&lt;/li&gt;&#xA;&lt;li&gt;What do you study?&lt;/li&gt;&#xA;&lt;li&gt;Which do you prefer, Saturday or Sunday?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Examiner can ONLY:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;repeat question&lt;/li&gt;&#xA;&lt;li&gt;ask you to elaborate&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Examiner CANNOT:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis Interview</title>
      <link>http://localhost:62354/post/0_redis_interview/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:62354/post/0_redis_interview/</guid>
      <description>&lt;h2 id=&#34;what-is-redis-pipelining&#34;&gt;What is Redis pipelining?&lt;/h2&gt;&#xA;&lt;p&gt;Pipelining is a technique used to send multiple commands to the server without waiting for the replies, and then reading the replies in a single step.&lt;/p&gt;&#xA;&lt;h2 id=&#34;explain-redis-transactions&#34;&gt;Explain Redis transactions.&lt;/h2&gt;&#xA;&lt;p&gt;Redis transactions allow the execution of a group of commands in a single step. Key properties:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;All commands in a transaction are serialized and executed sequentially&lt;/li&gt;&#xA;&lt;li&gt;Either all or none of the commands are processed&lt;/li&gt;&#xA;&lt;li&gt;Redis transactions are atomic&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-does-redis-implement-master-slave-replication&#34;&gt;How does Redis implement master-slave replication?&lt;/h2&gt;&#xA;&lt;p&gt;Redis uses asynchronous replication, where a master can have multiple slaves. The replication is non-blocking on the master side, so the master can continue serving queries while slaves are synchronizing. Slaves can also be configured to accept connections from other slaves, creating a graph-like structure.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
